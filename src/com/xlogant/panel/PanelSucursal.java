/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xlogant.panel;

import com.xlogant.control.texto.JTextFieldLimit;
import com.xlogant.control.texto.LimitadorSoloNumeros;
import com.xlogant.controlador.ControlSucursal;
import com.xlogant.emails.ValidarEmail;
import com.xlogant.login.LoginDialog;
import com.xlogant.principal.CentroPrincipal;
import java.awt.Color;
import java.io.Serial;
import java.util.Objects;
import java.util.TreeMap;
import javax.swing.JComponent;

import static java.lang.Integer.valueOf;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.showInternalMessageDialog;

/**
 *
 * @author oscar
 */
@SuppressWarnings("CallToPrintStackTrace")
public final class PanelSucursal extends javax.swing.JPanel {

    /**
     * Creates new form PanelSucursal
     */
    public PanelSucursal() {
        initComponents();
        idus = LoginDialog.e_id;
        String elRoleUsua = LoginDialog.jk;
        introle = valueOf(elRoleUsua);
        idempresa = LoginDialog.idempre;
        eventosSucursal();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        comboEmp = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        nomSucursal = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        numSucursal = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        codigoPostSuc = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        direccionSuc = new javax.swing.JTextField();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        telefono1 = new javax.swing.JFormattedTextField();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        telefono2 = new javax.swing.JFormattedTextField();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        textEmail = new javax.swing.JTextField();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        comboEncargado = new javax.swing.JComboBox<>();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        comboEstatus = new javax.swing.JComboBox<>();
        javax.swing.JSeparator jSeparator1 = new javax.swing.JSeparator();
        javax.swing.JSeparator jSeparator2 = new javax.swing.JSeparator();
        guardando = new javax.swing.JButton();
        limpiaTodo = new javax.swing.JButton();
        javax.swing.JLabel jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Empresa: ");

        jLabel2.setText("Nombre sucursal: ");

        nomSucursal.setDocument(new JTextFieldLimit(60, false));
        nomSucursal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nomSucursal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 51, 204)));

        jLabel3.setText("Dirección: ");

        numSucursal.setDocument(new JTextFieldLimit(20, true));
        numSucursal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numSucursal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 51, 204)));

        jLabel4.setText("Codigo Postal: ");

        codigoPostSuc.setDocument(new LimitadorSoloNumeros(codigoPostSuc,5));
        codigoPostSuc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codigoPostSuc.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 51, 204)));

        jLabel5.setText("Número de sucursal: ");

        direccionSuc.setDocument(new JTextFieldLimit(50, false));
        direccionSuc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        direccionSuc.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 51, 204)));

        jLabel6.setText("Teléfono 1: ");

        telefono1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 51, 204)));
        try {
            telefono1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-##-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        telefono1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel7.setText("Teléfono 2: ");

        telefono2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 51, 204)));
        try {
            telefono2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-##-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        telefono2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel8.setText("Email: ");

        textEmail.setDocument(new JTextFieldLimit(40, false));
        textEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(0, 51, 204)));

        jLabel9.setText("Encargado: ");

        jLabel10.setText("Estatus sucursal: ");

        guardando.setText("Guardar");
        guardando.setEnabled(false);

        limpiaTodo.setText("Limpiar");

        jLabel11.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(getClass().getResource("/com/xlogant/image/índice.jpeg")))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardando)
                .addGap(22, 22, 22)
                .addComponent(limpiaTodo)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(4, 4, 4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(comboEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codigoPostSuc, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(direccionSuc)
                                    .addComponent(nomSucursal)
                                    .addComponent(telefono1)
                                    .addComponent(telefono2)
                                    .addComponent(textEmail)
                                    .addComponent(comboEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addComponent(jLabel11)
                                .addGap(28, 28, 28))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(comboEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nomSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(numSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(codigoPostSuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(direccionSuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telefono1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(telefono2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboEncargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardando)
                    .addComponent(limpiaTodo))
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void eventosSucursal() {

        var llenandoEmpresas = ControlSucursal.sucursalesEmpresas(CentroPrincipal.unNombre);
        comboEmp.removeAllItems();
        comboEmp.addItem("");
        comboEmp.repaint();
        llenandoEmpresas.forEach((s, d) -> comboEmp.addItem(s));

        var llenandoEncargados = ControlSucursal.devuelveEncargado(introle, idempresa);
        comboEncargado.removeAllItems();
        comboEncargado.addItem("");
        comboEncargado.repaint();
        llenandoEncargados.forEach((i, s) -> comboEncargado.addItem(s));

        var llenaEstadoSuc = new TreeMap<String, Boolean>();
        llenaEstadoSuc.put("Activa", true);
        llenaEstadoSuc.put("Inactiva", false);
        comboEstatus.removeAllItems();
        comboEstatus.addItem("");
        llenaEstadoSuc.forEach((s, b) -> comboEstatus.addItem(s));

        comboEmp.addActionListener(e -> {
            var empresa = (String) comboEmp.getSelectedItem();
            if ("".equals(empresa)) {
                showInternalMessageDialog(this, "El campo empresa esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                comboEmp.requestFocus();
            } else {
                ((JComponent) e.getSource()).transferFocus();
            }
        });

        nomSucursal.addActionListener(e -> {
            var nombreDeSuc = nomSucursal.getText();
            if ("".equals(nombreDeSuc)) {
                showInternalMessageDialog(this, "El campo sucursal esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                nomSucursal.requestFocus();
            } else {
                ((JComponent) e.getSource()).transferFocus();
            }
        });

        numSucursal.addActionListener(e -> {
            var numsuc = numSucursal.getText();
            if ("".equals(numsuc)) {
                showInternalMessageDialog(this, "El campo número de sucursal esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                numSucursal.requestFocus();
            } else if (ControlSucursal.NumSucValidado(idempresa, numsuc)) {
                showInternalMessageDialog(this, "El campo número de sucursal es invalido\nIntente con otro número.", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                numSucursal.requestFocus();
                numSucursal.setSelectionStart(0);
                numSucursal.setSelectionEnd(numSucursal.getText().length());
                numSucursal.setSelectionColor(Color.CYAN);
            } else {
                ((JComponent) e.getSource()).transferFocus();
            }
        });

        codigoPostSuc.addActionListener(e -> {
            var cp = codigoPostSuc.getText();
            if ("".equals(cp)) {
                showInternalMessageDialog(this, "El campo código postal esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                codigoPostSuc.requestFocus();
            } else {
                ((JComponent) e.getSource()).transferFocus();
            }
        });

        direccionSuc.addActionListener(e -> {
            var direccion = direccionSuc.getText();
            if ("".equals(direccion)) {
                showInternalMessageDialog(this, "El campo dirección esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                direccionSuc.requestFocus();
            } else {
                ((JComponent) e.getSource()).transferFocus();
            }
        });

        textEmail.addActionListener(e -> {
            var mailPersona = textEmail.getText();
            if ("".equals(mailPersona)) {
                showInternalMessageDialog(this, "El campo código postal esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                textEmail.requestFocus();
            } else if (ValidarEmail.validaEmail(mailPersona)) {
                ((JComponent) e.getSource()).transferFocus();
            } else {
                showInternalMessageDialog(this, "Es erroneo el campo mail", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                textEmail.requestFocus();
                textEmail.setSelectionStart(0);
                textEmail.setSelectionEnd(textEmail.getText().length());
                textEmail.setSelectionColor(Color.CYAN);
            }
        });

        comboEncargado.addActionListener(e -> {
            var encargado = (String) comboEncargado.getSelectedItem();
            if ("".equals(encargado)) {
                showInternalMessageDialog(this, "El campo encargado esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                comboEncargado.requestFocus();
            } else {
                ((JComponent) e.getSource()).transferFocus();
            }
        });

        comboEstatus.addActionListener(e -> {
            var edo = (String) comboEstatus.getSelectedItem();
            if ("".equals(edo)) {
                showInternalMessageDialog(this, "El campo estatus esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                comboEstatus.requestFocus();
            } else {
                guardando.setEnabled(true);
                ((JComponent) e.getSource()).transferFocus();
            }
        });

        telefono1.addActionListener(e -> ((JComponent) e.getSource()).transferFocus());

        telefono2.addActionListener(e -> ((JComponent) e.getSource()).transferFocus());

        guardando.addActionListener(e -> {
            var idempre = llenandoEmpresas.get(comboEmp.getItemAt(comboEmp.getSelectedIndex()));
            var nombreSucursal = nomSucursal.getText();
            var numeroSucursal = numSucursal.getText();
            var CodigoPost = codigoPostSuc.getText();
            var direccionSucursal = direccionSuc.getText();
            var TelefonoUno = (String) telefono1.getValue();
            var TelefonoDos = (String) telefono2.getValue();
            var correoElectronico = textEmail.getText();
            var EncargadoSuc = (String) comboEncargado.getSelectedItem();
            var estadoSucursal = llenaEstadoSuc.get(comboEstatus.getItemAt(comboEstatus.getSelectedIndex()));
            var id_us = valueOf(idus);
            if (llenados()) {
                System.out.println("Todos los datos llenos");
                var guardaDatosSuc = ControlSucursal.guardaSucursal(idempre, nombreSucursal, direccionSucursal,
                        CodigoPost, TelefonoUno, TelefonoDos, correoElectronico, EncargadoSuc, numeroSucursal, id_us);
                if (guardaDatosSuc) {
                    var denId = ControlSucursal.devuelveIDSucursal(numeroSucursal);
                    if (denId > 0) {
                        var todo = ControlSucursal.insertaControl(denId, estadoSucursal);
                        if (todo) {
                            showInternalMessageDialog(this, "Datos guardados correctamente", "Monitor", INFORMATION_MESSAGE);
                            limpiando();
                        }
                    } else {
                        showInternalMessageDialog(this, "No se logro obtener el identificador de sucursal", "Monitor", ERROR_MESSAGE);
                    }
                } else {
                    showInternalMessageDialog(this, "No se logro guardar los datos de la sucursal", "Monitor", ERROR_MESSAGE);
                }
            } else {
                showInternalMessageDialog(this, "Llene todos los campos requeridos", "Monitor", ERROR_MESSAGE);
                System.out.println("Campos vacios");
            }
        });

        limpiaTodo.addActionListener(e -> {
            showInternalMessageDialog(this, "Se han limpiado todos los campos", "Monitor", INFORMATION_MESSAGE);
            limpiando();
        });
    }

    private boolean llenados() {
        var comemp = (String) comboEmp.getSelectedItem();
        var nombreSucursal = nomSucursal.getText();
        var numeroSucursal = numSucursal.getText();
        var cp = codigoPostSuc.getText();
        var direcc = direccionSuc.getText();
        var mail = textEmail.getText();
        var enc = (String) comboEncargado.getSelectedItem();
        var estatus = (String) comboEstatus.getSelectedItem();
        if ("".equals(comemp)) {
            showInternalMessageDialog(this, "El campo nombre empresa esta vacío", "Monitor", ERROR_MESSAGE);
            java.awt.Toolkit.getDefaultToolkit().beep();
            comboEmp.requestFocus();
            return false;
        } else if ("".equals(nombreSucursal)) {
            showInternalMessageDialog(this, "El campo nombre sucursal esta vacío", "Monitor", ERROR_MESSAGE);
            java.awt.Toolkit.getDefaultToolkit().beep();
            nomSucursal.requestFocus();
            return false;
        } else if ("".equals(numeroSucursal)) {
            showInternalMessageDialog(this, "El campo número sucursal esta vacío", "Monitor", ERROR_MESSAGE);
            java.awt.Toolkit.getDefaultToolkit().beep();
            numSucursal.requestFocus();
            return false;
        } else if (ControlSucursal.NumSucValidado(idempresa, numeroSucursal)) {
            showInternalMessageDialog(this, "El campo número de sucursal es invalido\nIntente con otro número.", "Monitor", ERROR_MESSAGE);
            numSucursal.requestFocus();
            numSucursal.setSelectionStart(0);
            numSucursal.setSelectionEnd(numSucursal.getText().length());
            numSucursal.setSelectionColor(Color.CYAN);
            return false;
        } else if ("".equals(cp)) {
            showInternalMessageDialog(this, "El campo código postal esta vacío", "Monitor", ERROR_MESSAGE);
            java.awt.Toolkit.getDefaultToolkit().beep();
            codigoPostSuc.requestFocus();
            return false;
        } else if ("".equals(direcc)) {
            showInternalMessageDialog(this, "El campo dirección esta vacío", "Monitor", ERROR_MESSAGE);
            java.awt.Toolkit.getDefaultToolkit().beep();
            direccionSuc.requestFocus();
            return false;
        } else if ("".equals(mail)) {
            showInternalMessageDialog(this, "El campo email esta vacío", "Monitor", ERROR_MESSAGE);
            java.awt.Toolkit.getDefaultToolkit().beep();
            textEmail.requestFocus();
            return false;
        } else if (ValidarEmail.validaEmail(mail)) {
            if ("".equals(enc)) {
                showInternalMessageDialog(this, "El campo encargado esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                comboEncargado.requestFocus();
                return false;
            } else if ("".equals(estatus)) {
                showInternalMessageDialog(this, "El campo estatus de sucursal esta vacío", "Monitor", ERROR_MESSAGE);
                java.awt.Toolkit.getDefaultToolkit().beep();
                comboEstatus.requestFocus();
                return false;
            } else {
                System.out.println("Todo validado");
                return true;
            }
        } else {
            showInternalMessageDialog(this, "El campo email no es valido", "Monitor", ERROR_MESSAGE);
            java.awt.Toolkit.getDefaultToolkit().beep();
            textEmail.requestFocus();
            return false;
        }
    }

    private void limpiando() {
        comboEmp.setSelectedIndex(0);
        nomSucursal.setText("");
        numSucursal.setText("");
        codigoPostSuc.setText("");
        direccionSuc.setText("");
        telefono1.setText("");
        telefono2.setText("");
        textEmail.setText("");
        comboEncargado.setSelectedIndex(0);
        comboEstatus.setSelectedIndex(0);
        guardando.setEnabled(false);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigoPostSuc;
    /*
    private javax.swing.JComboBox comboEmp;
    */
    private javax.swing.JComboBox<String> comboEmp;
    /*
    private javax.swing.JComboBox comboEncargado;
    */
    private javax.swing.JComboBox<String> comboEncargado;
    /*
    private javax.swing.JComboBox comboEstatus;
    */
    private javax.swing.JComboBox<String> comboEstatus;
    private javax.swing.JTextField direccionSuc;
    private javax.swing.JButton guardando;
    private javax.swing.JButton limpiaTodo;
    private javax.swing.JTextField nomSucursal;
    private javax.swing.JTextField numSucursal;
    private javax.swing.JFormattedTextField telefono1;
    private javax.swing.JFormattedTextField telefono2;
    private javax.swing.JTextField textEmail;
    // End of variables declaration//GEN-END:variables

    @Serial
    private static final long serialVersionUID = -769154452288980874L;
    private static String idus;
    private static long idempresa, introle, idusuarios;
}
