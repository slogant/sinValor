/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xlogant.login;

import com.xlogant.control.texto.JTextFieldLimit;
import com.xlogant.controlador.ControlaUsuario;

import static com.xlogant.controlador.ControlaUsuario.*;
import static com.xlogant.encripta.EncriptaGenerador.*;
import static java.awt.EventQueue.*;
import static java.awt.Toolkit.*;
import static java.lang.Runtime.*;
import static java.lang.Runtime.getRuntime;
import static java.lang.String.*;
import static java.lang.System.*;
import static java.lang.Thread.*;
import static java.net.InetAddress.*;
import static java.time.LocalTime.*;
import static java.time.format.DateTimeFormatter.*;
import static javax.swing.JOptionPane.*;
import static javax.swing.UIManager.*;

import com.xlogant.principal.CentroPrincipal;

import java.awt.*;
import java.awt.event.WindowAdapter;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Serial;
import java.net.InetAddress;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.concurrent.TimeUnit;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author oscar
 */
public final class LoginDialog extends JDialog {

    /**
     * Creates new form LoginDialog
     *
     * @param parent
     * @param modal
     */
    public LoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        IniciaReloj();
        controlBotonones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        cerrar = new javax.swing.JButton();
        acceder = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        textNombre = new javax.swing.JTextField();
        textClave = new javax.swing.JPasswordField();
        teclado = new javax.swing.JButton();
        res = new javax.swing.JLabel();
        lajava = new javax.swing.JLabel();
        fechas = new javax.swing.JLabel();
        lahora = new javax.swing.JLabel();
        ip = new javax.swing.JLabel();
        sistema = new javax.swing.JLabel();
        javax.swing.JLabel tiempouso = new javax.swing.JLabel();
        psql = new javax.swing.JLabel();
        muestra = new javax.swing.JLabel();
        so = new javax.swing.JLabel();
        kernel = new javax.swing.JLabel();
        javax.swing.JLabel mas = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        numProcesador = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        vendorJava = new javax.swing.JLabel();
        so_user = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Control de usuario");
        setModal(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        cerrar.setForeground(new java.awt.Color(204, 102, 0));
        cerrar.setText("Cerrar");

        acceder.setForeground(new java.awt.Color(204, 102, 0));
        acceder.setText("Acceder");

        jLabel1.setFont(new java.awt.Font("Dialog", Font.BOLD, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 102, 0));
        jLabel1.setText("Nombre de usuario: ");

        jLabel2.setFont(new java.awt.Font("Dialog", Font.BOLD, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 102, 0));
        jLabel2.setText("Clave de usuario: ");

        textNombre.setDocument(new JTextFieldLimit(18, false));
        textNombre.setFont(new java.awt.Font("Dialog", Font.BOLD, 14)); // NOI18N
        textNombre.setForeground(new java.awt.Color(255, 102, 0));
        textNombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textNombre.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(204, 102, 0)));

        textClave.setDocument(new JTextFieldLimit(14, false));
        textClave.setFont(new java.awt.Font("Dialog", Font.BOLD, 14)); // NOI18N
        textClave.setForeground(new java.awt.Color(255, 102, 0));
        textClave.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textClave.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(204, 102, 0)));

        teclado.setBackground(new java.awt.Color(255, 102, 0));

        res.setForeground(new java.awt.Color(204, 102, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(teclado, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(1, 1, 1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                            .addComponent(textClave))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(res, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(acceder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cerrar)
                                .addGap(24, 24, 24)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acceder)
                            .addComponent(cerrar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(res, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(teclado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );

        lajava.setForeground(new java.awt.Color(255, 102, 0));
        lajava.setText("version de java");

        fechas.setFont(new java.awt.Font("Dialog", Font.BOLD, 70)); // NOI18N
        fechas.setForeground(new java.awt.Color(255, 153, 0));
        fechas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fechas.setText("fecha");

        lahora.setFont(new java.awt.Font("Dialog", Font.BOLD, 70)); // NOI18N
        lahora.setForeground(new java.awt.Color(255, 153, 0));
        lahora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lahora.setText("Hora");

        ip.setForeground(new java.awt.Color(255, 153, 0));
        ip.setText("ip");

        sistema.setFont(new java.awt.Font("Dialog", Font.BOLD, 36)); // NOI18N
        sistema.setForeground(new java.awt.Color(255, 153, 0));
        sistema.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sistema.setText("Nombre SO");

        tiempouso.setForeground(new java.awt.Color(204, 102, 0));
        tiempouso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tiempouso.setText("Tiempo de uso de la pc");

        psql.setForeground(new java.awt.Color(255, 102, 0));
        psql.setText("Versión de postgresql");

        muestra.setForeground(new java.awt.Color(255, 153, 0));
        muestra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        so.setForeground(new java.awt.Color(255, 153, 0));
        so.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        so.setText("SO");

        kernel.setForeground(new java.awt.Color(255, 153, 0));
        kernel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        kernel.setText("kernel");

        mas.setForeground(new java.awt.Color(255, 102, 0));

        jLabel3.setForeground(new java.awt.Color(255, 153, 0));
        jLabel3.setText("Número de procesadores:");

        numProcesador.setForeground(new java.awt.Color(255, 153, 0));
        numProcesador.setText("0");

        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("Versión de java: ");

        vendorJava.setForeground(new java.awt.Color(255, 102, 0));
        vendorJava.setText("vendor");

        so_user.setForeground(new java.awt.Color(255, 153, 0));

        jLabel5.setForeground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("Usuario pc:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(muestra, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGap(188, 188, 188)
                            .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(so, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kernel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sistema, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(lahora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(psql, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mas, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numProcesador, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(so_user, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(vendorJava, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lajava))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 287, Short.MAX_VALUE)
                .addComponent(tiempouso, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(446, 446, 446))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fechas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lahora, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kernel)
                            .addComponent(so)
                            .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(muestra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sistema, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tiempouso, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lajava)
                    .addComponent(psql)
                    .addComponent(jLabel3)
                    .addComponent(numProcesador)
                    .addComponent(jLabel4))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(mas, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(so_user, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vendorJava)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))))
                .addGap(30, 30, 30))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1298, 706));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void controlBotonones() {
        var nombre = getProperty("user.name");
        so_user.setText(nombre);
        try {
            textNombre.addActionListener(e -> ((JComponent) e.getSource()).transferFocus());
            textClave.addActionListener(e -> ((JComponent) e.getSource()).transferFocus());
            String s;
            String ca;
            String Otro;
            String verPost = null;
            var runtime = getRuntime();
            var ven = getProperty("java.vendor");
            final var pb = new ProcessBuilder("/bin/bash", "-c","psql --version");
            final var process = pb.start();
            try (var sc = new Scanner(process.getInputStream())) {
                while (sc.hasNext()) {
                    //psql.setText(sc.nextLine());
                    //var ds = sc.nextLine().toString();
                    System.out.println(sc.nextLine());
                }
            }
            var py = runtime.exec("psql --version");
            var IP = getLocalHost().getHostAddress();
            var mexico = new Locale.Builder().setLanguage("es").setRegion("MX").build();
            var zdt = ZonedDateTime.now();
            var OSV = getProperty("os.version");
            var SO = getProperty("os.name");
            var SOS = getProperty("os.arch");
            var VERSION = getProperty("java.version");
            var formatter = ofPattern(ANIO, mexico);
            var tiempo = now();
            var valorFecha = LocalDate.now().format(formatter);
            var valorHora = tiempo.toString();
            sistema.setText(SO);
            var stdi = new BufferedReader(new InputStreamReader(
                    py.getInputStream()));
            var stde = new BufferedReader(new InputStreamReader(
                    py.getErrorStream()));
            while ((ca = stdi.readLine()) != null) {
                psql.setText(ca);
                verPost = ca;
                out.println(ca);
            }
            while ((ca = stde.readLine()) != null) {
                out.println(ca);
                verPost = ca;
            }
            task = new TimerTask() {
                @Override
                public void run() {
                    String muestraLetras;
                    if (i < PALABRAS.length()) {
                        try {
                            TimeUnit.MILLISECONDS.sleep(100);
                            lestras = PALABRAS.substring(j, i);
                            muestraLetras = muestra.getText().concat(lestras);
                            muestra.setText(muestraLetras);
                            j += 1;
                        } catch (InterruptedException ex) {
                            Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
                            currentThread().interrupt();
                            out.println("Cadena terminada");
                        }
                    } else {
                        tiem.cancel();
                        task.cancel();
                        out.println("tiempo cancelado");
                    }
                    i++;
                }
            };
            tiem = new Timer();
            tiem.schedule(task, 0, 100);
            so.setText(SO);
            kernel.setText(OSV);
            lajava.setText(VERSION);
            vendorJava.setText(ven);
            fechas.setText(valorFecha);
            ip.setText(IP.trim());
            //ip.setText(la.get(1));
            var toolkit = getDefaultToolkit();
            var screenSize = toolkit.getScreenSize();
            var x = screenSize.width;
            var y = screenSize.height;
            setSize(x, y);
            setAlwaysOnTop(true);
            setLocationRelativeTo(null);
            setUndecorated(true);
            toFront();
            teclado.addActionListener(e -> {
                try {
                    var processBuilder = new ProcessBuilder();
                    processBuilder.command("/usr/bin/florence");
                    var procesxs = processBuilder.start();
                    var ret = procesxs.waitFor();
                    out.printf("Program exited with code: %d", ret);
                } catch (IOException | InterruptedException ex) {
                    Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
                    out.println(ex.getCause());
                }
            });

            acceder.addActionListener(e -> {

                var mCaptura = false;
                var SOSS = sistema.getText();
                var Nombre = textNombre.getText();
                var Clave = new String(textClave.getPassword());
                var encriptado = getHash(Clave, 5);
                if (Nombre.equals("")) {
                    res.setText("El Campo nombre esta vacío....");
                    showMessageDialog(LoginDialog.this, "El Campo usuario esta vacío", "Monitor", ERROR_MESSAGE);
                    textNombre.requestFocus();
                } else if (Clave.equals("")) {
                    res.setText("El Campo clave esta vacío....");
                    showMessageDialog(LoginDialog.this, "El Campo clave esta vacío", "Monitor", ERROR_MESSAGE);
                    textClave.requestFocus();
                } else if (login(Nombre, encriptado)) {
                    if (usuarioActivo(Nombre, encriptado)) {
                        var ID = obtenerID(Nombre, encriptado, true);
                        var roles = obtenerRole(Nombre, encriptado, true);
                        var encarga = obtenerIDEmp(Nombre, encriptado, true);
                        var nombreUs = obtenerPorNombre(Nombre, encriptado, true);
                        var elIDS = IDSUCURSAL(Nombre, encriptado);
                        var nombreSuc = NombreSuc(Nombre, encriptado, elIDS);
                        var modifica = valueOf(roles);
                        var envia = valueOf(ID);
                        var vendor = getProperty("java.vendor");
                        var numeroProcesadores = getRuntime().availableProcessors();
                        var procesadores = valueOf(numeroProcesadores);
                        jk = modifica;
                        e_id = envia;
                        elNombre = nombreUs;
                        idempre = encarga;
                        nomSucursales = nombreSuc;
                        var IP_PC = IP.strip();
                        var hecho = insertaIngreso(ID, IP_PC, SOSS, SO.concat(" ").concat(OSV), ENTRADA, VERSION, nombreSuc, vendor, procesadores);
                        //Cambiando el icono por defecto del dialogo
                        var iconos = new ImageIcon(Objects.requireNonNull(getClass().getResource("/com/xlogant/image/Keysita.gif")));
                        //Modificando el color de fondo del dialodo de aviso
                        put("OptionPane.background", Color.white);
                        put("Panel.background", Color.white);
                        showMessageDialog(LoginDialog.this, "Usuario identificado ", "Monitor", INFORMATION_MESSAGE, iconos);
                        out.println(hecho);
                        var centroPrincipal = new CentroPrincipal();
                        CentroPrincipal.valorTexto.setText(modifica);
                        CentroPrincipal.controlVariable.setText(modifica);
                        centroPrincipal.setVisible(true);
                        centroPrincipal.toFront();
                        centroPrincipal.repaint();
                        centroPrincipal.revalidate();
                        var ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
                        var gs = ge.getDefaultScreenDevice();
                        gs.setFullScreenWindow(centroPrincipal);
                        //GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().setFullScreenWindow(centroPrincipal);
                        LoginDialog.this.dispose();
                        //imagenPanel.guardarDirecto();
                        tiem.cancel();
                        task.cancel();
                        temp.stop();
                        out.println("tiempo cancelado");
                        out.println(getProperty("user.home") + " ...............................................................");
                    } else {
                        showMessageDialog(LoginDialog.this, "Usuario inactivo ", "Monitor", ERROR_MESSAGE);
                        textNombre.setText("");
                        textClave.setText("");
                        textNombre.requestFocus();
                        revalidate();
                        repaint();
                    }
                } else {
                    res.setText("Usuario no encontrado...");
                    textNombre.setText("");
                    textClave.setText("");
                    textNombre.requestFocus();
                    revalidate();
                    repaint();
                }
            });

            cerrar.addActionListener(e -> {
                var close = showConfirmDialog(this, "Desea cerrar la aplicación", "Monitor", YES_NO_OPTION);
                if (close == YES_OPTION) {
                    revalidate();
                    repaint();
                    dispose();
                    tiem.cancel();
                    task.cancel();
                    temp.stop();
                    exit(0);
                } else {
                    showMessageDialog(this, "Cancelado salida del programa", "Monitor", INFORMATION_MESSAGE);
                    textNombre.setText("");
                    textClave.setText("");
                    textNombre.requestFocus();
                }
            });
            acceder.setMnemonic('A');
            cerrar.setMnemonic('C');
            getRootPane().setDefaultButton(acceder);
        } catch (IOException ex) {
            Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
            out.println(ex.getLocalizedMessage());
        }
    }

    private void IniciaReloj() {
        temp = new javax.swing.Timer(1000, e -> cargaHora());
        temp.start();
    }

    private void cargaHora() {
        // try {
        String ac;
        var runtime = getRuntime();
        //var cmd = "wmic os get lastBootUpTime";
        //Process pro = runtime.exec(cmd);
        var ti = now().format(ofPattern("KK:mm:ss a"));
        /* var stdE = new BufferedReader(new InputStreamReader(
                    pro.getErrorStream()));
            var stdI = new BufferedReader(new InputStreamReader(
                    pro.getInputStream()));*/
        lahora.setText(ti);
        /* while ((ac = stdI.readLine()) != null) {
                var tiempoAcceso = ac;
                tiempouso.setText(tiempoAcceso.toLowerCase());
                System.out.println("--------------->" + tiempoAcceso);
            }
            while ((ac = stdE.readLine()) != null) {
                System.out.println(ac);
            }*/
        var tamanio = 1024 * 1024;
        var numeroProcesadores = getRuntime().availableProcessors();
        var colocarNumeroProcesador = valueOf(numeroProcesadores);
        numProcesador.setText(colocarNumeroProcesador);
        /*System.out.println(numeroProcesadores);
            System.out.println("Maxima Memoria: " + runtime.maxMemory() / tamanio + "MB");
            System.out.println("Memoria Total: " + runtime.totalMemory() / tamanio + "MB");
            System.out.println("Memoria libre: " + runtime.freeMemory() / tamanio + "MB");
            System.out.println("Memoria usuada: " + (runtime.totalMemory() - runtime.freeMemory()) / tamanio + "MB");*/
        /*} catch (IOException ex) {
            Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getLocalizedMessage());
        }*/
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String... args) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            String s;
            String carga = null;
            //var runtime = Runtime.getRuntime();
            //final Process p = runtime.exec("cat /etc/issue.net");
            var IPx = getLocalHost();
            var OSV = getProperty("os.version");
            var SO = getProperty("os.name");
            /* BufferedReader stdInput = new BufferedReader(new InputStreamReader(
                    p.getInputStream()));
            BufferedReader stdError = new BufferedReader(new InputStreamReader(
                    p.getErrorStream()));
            while ((s = stdInput.readLine()) != null) {
                carga = s;
                System.out.println(s);
            }
            while ((s = stdError.readLine()) != null) {
                carga = s;
                System.out.println(s);
            }*/
            var IP_PC = IPx.toString().trim();
            var inicio = currentTimeMillis();
            try {
                for (var info : getInstalledLookAndFeels()) {
                    if ("Metal".equals(info.getName())) {
                        setLookAndFeel(info.getClassName());
                        /* Create and display the dialog */
                        invokeLater(() -> {
                            var dialog = new LoginDialog(new JFrame(), true);
                            dialog.addWindowListener(new WindowAdapter() {
                                @Override
                                public void windowClosing(java.awt.event.WindowEvent e) {
                                    exit(0);
                                }
                            });
                            dialog.setVisible(true);
                        });
                        break;
                    }
                }
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                Logger.getLogger(LoginDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            var fin = currentTimeMillis();
            var total = fin - inicio;
            var controlado = valueOf(total);
            if (insertaInicio(IP_PC, carga, SO.concat(" ").concat(OSV), controlado)) {
                out.println("Datos guardaddos inicio ");
            } else {
                out.println("No se guardaron los datos de inicio");
            }
        } catch (IOException ex) {
            Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
            out.println(ex.getLocalizedMessage());
        }
        //</editor-fold>
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceder;
    public javax.swing.JButton cerrar;
    private javax.swing.JLabel fechas;
    private javax.swing.JLabel ip;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JLabel kernel;
    private javax.swing.JLabel lahora;
    private javax.swing.JLabel lajava;
    private javax.swing.JLabel muestra;
    private javax.swing.JLabel numProcesador;
    private javax.swing.JLabel psql;
    private javax.swing.JLabel res;
    private javax.swing.JLabel sistema;
    private javax.swing.JLabel so;
    private javax.swing.JLabel so_user;
    private javax.swing.JButton teclado;
    private javax.swing.JPasswordField textClave;
    private javax.swing.JTextField textNombre;
    private javax.swing.JLabel vendorJava;
    // End of variables declaration//GEN-END:variables
    @Serial
    private static final long serialVersionUID = -4477681729100140273L;
    private final static String ANIO = "dd/MM/yyyy";
    private final static String HORA = "hh : mm : ss z";
    private javax.swing.Timer temp;
    private TimerTask task;
    private Timer tiem;
    private int i = 1, j = 0;
    private final static String PALABRAS = "Sistemas desarrollado por Marielux 2021 Todos los Derechos reservados...";
    private final static String ENTRADA = "ENTRADA";
    private String lestras;
    public static String jk, e_id, nomSucursales;
    public static String elNombre;
    public static long idempre;
    private GraphicsDevice vc;
    public static int role, rol, muestrame;
    private ArrayList<String> la;
    //private ImagePanel imagenPanel = new ImagePanel();
}
